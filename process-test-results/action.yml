name: "Generate Allure2 Test Report"
description: |
  Gets nexttest unit test result artifacts from prior runs and generates relevant reports.
inputs:
  token:
    description: github token, needed to access artifacts
    required: true
  artifacts:
    description: Space seperated names of test result artifacts to download.
    required: true
  repo:
    default: ${{ github.repository }}
    description: Target repo to pull test result artifacts from (defaults to current repo.) Should be in slug form (ie, diem/diem).
    required: false
  workflow_file:
    description: The workflow filename used to find workflow job history.
    required: false
  branch:
    description: The target branch to pull test result artifacts.
    required: false
  history:
    description: The number of historic runs to gather test result artifacts from.
    default: "20"
    required: false
  recreate:
    description: should existing reports be rebuilt and republished.
    default: "false"
    required: false
  allure_configuration:
    description: Configuration folder for allure.
    default: ./allure-configuration
    required: false
runs:
  using: "composite"
  steps:
    - run: |
        extra_param=()
        if [ "$RECREATE" = "true" ]; then
          extra_param+=("-m")
        fi
        workdir=${GITHUB_ACTION_PATH}/work/
        test_artifacts=${workdir}test_results/
        cd ${GITHUB_ACTION_PATH}/
        ./diem-report.sh -d "${test_artifacts}" -a "$ARTIFACTS" -w "$WORKFLOW_FILE" -b "$BRANCH" -r "$REPOSITORY" -h "$HISTORY" -t "${GITHUB_TOKEN}" -c "${ALLURE_CONFIG}" "${extra_param[@]}"
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
        TARGET_DIR: ${{ inputs.target_dir }}
        ARTIFACTS: ${{ inputs.artifacts }}
        REPOSITORY: ${{ inputs.repo }}
        WORKFLOW_FILE: ${{ inputs.workflow_file }}
        BRANCH: ${{ inputs.branch }}
        HISTORY: ${{ inputs.history }}
        WORKFLOW_RUN_ID: ${{ inputs.workflow_run_id }}
        RECREATE: ${{ inputs.recreate }}
        ALLURE_CONFIG: ${{ inputs.allure_configuration }}
